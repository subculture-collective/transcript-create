name: Python SDK CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'clients/python/**'
      - '.github/workflows/python-sdk-ci.yml'
    tags:
      - 'python-sdk-v*'
  pull_request:
    paths:
      - 'clients/python/**'
      - '.github/workflows/python-sdk-ci.yml'

permissions:
  contents: read

jobs:
  lint:
    name: Lint Python SDK
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: clients/python
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -e ".[dev]"
      
      - name: Run ruff
        run: ruff check transcript_create_client tests
      
      - name: Run black
        run: black --check transcript_create_client tests
      
      - name: Run mypy
        run: mypy transcript_create_client

  test:
    name: Test Python SDK
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']
    
    defaults:
      run:
        working-directory: clients/python
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          pip install -e ".[dev]"
      
      - name: Run tests
        run: pytest tests/ --cov=transcript_create_client --cov-report=xml --cov-report=term
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: clients/python/coverage.xml
          flags: python-sdk
          name: python-sdk-coverage

  build:
    name: Build Python SDK
    runs-on: ubuntu-latest
    needs: [lint, test]
    permissions:
      contents: read
    defaults:
      run:
        working-directory: clients/python
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      
      - name: Install build dependencies
        run: |
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: python-sdk-dist
          path: clients/python/dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/python-sdk-v')
    permissions:
      contents: read
    defaults:
      run:
        working-directory: clients/python
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: python-sdk-dist
          path: clients/python/dist/
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      
      - name: Install twine
        run: pip install twine
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
