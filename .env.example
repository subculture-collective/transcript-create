# ================================================================================
# transcript-create Environment Configuration
# ================================================================================
# SECURITY NOTE: This file contains example values only. NEVER commit actual
# secrets to version control. Copy this file to .env and fill in real values.
# The .env file is gitignored and will not be committed.
#
# REQUIRED SETUP:
# 1. Copy this file: cp .env.example .env
# 2. Generate a secure SESSION_SECRET: openssl rand -hex 32
# 3. Configure DATABASE_URL if not using docker-compose default
# 4. Fill in OAuth credentials and other secrets as needed for your deployment
# ================================================================================

# --- Core Database and Worker ---
# Connection string for PostgreSQL database
# Docker compose default: postgresql+psycopg://postgres:postgres@db:5432/transcripts
# Local dev: postgresql+psycopg://postgres:postgres@localhost:5432/transcripts
DATABASE_URL=postgresql+psycopg://postgres:postgres@localhost:5432/transcripts

# Hugging Face token for speaker diarization (optional)
# Get your token from: https://huggingface.co/settings/tokens
# Leave empty to skip diarization
HF_TOKEN=

# Whisper config
WHISPER_MODEL=large-v3
WHISPER_BACKEND=faster-whisper
CHUNK_SECONDS=900
MAX_PARALLEL_JOBS=1
ROCM=true
FORCE_GPU=false
# For NVIDIA use: cuda,hip; for AMD (ROCm) prefer: hip,cuda
GPU_DEVICE_PREFERENCE=cuda,hip
GPU_COMPUTE_TYPES=float16,int8_float16,bfloat16,float32
GPU_MODEL_FALLBACKS=large-v3,medium

# Cleanup options
CLEANUP_AFTER_PROCESS=true
CLEANUP_DELETE_RAW=true
CLEANUP_DELETE_WAV=false
CLEANUP_DELETE_CHUNKS=true
CLEANUP_DELETE_DIR_IF_EMPTY=true

# --- Search Backend ---
# Choose between 'postgres' (FTS) or 'opensearch' for search
#SEARCH_BACKEND=postgres
SEARCH_BACKEND=opensearch

# OpenSearch configuration (only used if SEARCH_BACKEND=opensearch)
OPENSEARCH_URL=http://localhost:9200
OPENSEARCH_INDEX_NATIVE=segments
OPENSEARCH_INDEX_YOUTUBE=youtube_segments

# OpenSearch authentication (leave empty for local dev with security disabled)
# For production, set strong credentials and enable security
OPENSEARCH_USER=
OPENSEARCH_INITIAL_ADMIN_PASSWORD=
OPENSEARCH_PASSWORD=

# --- Local port overrides for Docker Compose (optional) ---
# Override host ports if defaults are busy on your machine.
# Uncomment and change as needed. docker-compose picks these automatically.
# DB_HOST_PORT=5434
# API_HOST_PORT=8000
# OPENSEARCH_HOST_PORT=9200
# DASHBOARDS_HOST_PORT=5601
# PROMETHEUS_HOST_PORT=9090
# GRAFANA_HOST_PORT=3300

# --- API / Frontend Integration ---
# CORS origin for frontend (adjust for production deployment)
FRONTEND_ORIGIN=http://localhost:5173

# --- Authentication and Sessions ---
# SECURITY CRITICAL: Generate a secure random secret for session signing
# Generate with: openssl rand -hex 32
# DO NOT use the default value in production!
SESSION_SECRET=change-me-generate-secure-random-value

# Admin dashboard access (comma-separated email addresses)
# Example: ADMIN_EMAILS=admin@example.com,manager@example.com
ADMIN_EMAILS=

# --- OAuth Configuration ---
# OAuth (Google)
# Get credentials from: https://console.cloud.google.com/apis/credentials
OAUTH_GOOGLE_CLIENT_ID=
OAUTH_GOOGLE_CLIENT_SECRET=
OAUTH_GOOGLE_REDIRECT_URI=http://localhost:8000/auth/callback/google

# OAuth (Twitch)
# Get credentials from: https://dev.twitch.tv/console/apps
OAUTH_TWITCH_CLIENT_ID=
OAUTH_TWITCH_CLIENT_SECRET=
OAUTH_TWITCH_REDIRECT_URI=http://localhost:8000/auth/callback/twitch

# --- Billing (Stripe) ---
# Get your Stripe credentials from: https://dashboard.stripe.com/apikeys
# Use test mode keys (sk_test_...) for development
# SECURITY WARNING: Never commit live keys (sk_live_...) to version control!
STRIPE_API_KEY=sk_test_...
STRIPE_PRICE_PRO_MONTHLY=price_...
STRIPE_PRICE_PRO_YEARLY=price_...

# Stripe webhook signing secret for verifying webhook events
# Get from: https://dashboard.stripe.com/webhooks
STRIPE_WEBHOOK_SECRET=whsec_...

# Redirect URLs after checkout (will substitute {origin} with FRONTEND_ORIGIN at runtime)
STRIPE_SUCCESS_URL={origin}/pricing?success=1
STRIPE_CANCEL_URL={origin}/pricing?canceled=1

# --- Logging and Observability ---
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
# Log format: 'json' for structured JSON logs, 'text' for plain text
LOG_FORMAT=json

# Optional Sentry error tracking (leave empty to disable)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# --- Frontend (Vite) ---
# If unset, dev server proxies /api to http://localhost:8000
VITE_API_BASE=

# --- Quotas / Plans ---
FREE_DAILY_SEARCH_LIMIT=10
PRO_PLAN_NAME=pro
FREE_DAILY_EXPORT_LIMIT=1

# --- PDF Export ---
PDF_FONT_PATH=
