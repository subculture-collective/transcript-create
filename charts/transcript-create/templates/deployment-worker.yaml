{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transcript-create.fullname" . }}-worker
  labels:
    {{- include "transcript-create.worker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "transcript-create.worker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "transcript-create.worker.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "transcript-create.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- include "transcript-create.podSecurityContext" . | nindent 8 }}
        {{- if .Values.worker.gpu.enabled }}
        supplementalGroups: [44, 104, 107]
        {{- end }}
      {{- if .Values.worker.gpu.enabled }}
      nodeSelector:
        {{- toYaml .Values.worker.gpu.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.worker.gpu.tolerations | nindent 8 }}
      {{- else }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
      - name: worker
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["python3", "-m", "worker.loop"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.existingSecret | default (printf "%s-secrets" (include "transcript-create.fullname" .)) }}
              key: database-url
        - name: OPENSEARCH_URL
          value: {{ include "transcript-create.opensearchUrl" . | quote }}
        - name: WHISPER_MODEL
          value: {{ .Values.config.whisper.model | quote }}
        - name: WHISPER_BACKEND
          value: {{ .Values.config.whisper.backendWorker | quote }}
        - name: FORCE_GPU
          value: {{ .Values.worker.gpu.enabled | quote }}
        - name: GPU_DEVICE_PREFERENCE
          value: {{ .Values.config.whisper.gpuDevicePreference | quote }}
        - name: GPU_COMPUTE_TYPES
          value: {{ .Values.config.whisper.gpuComputeTypes | quote }}
        - name: CHUNK_SECONDS
          value: {{ .Values.config.whisper.chunkSeconds | quote }}
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.existingSecret | default (printf "%s-secrets" (include "transcript-create.fullname" .)) }}
              key: hf-token
              optional: true
        - name: LOG_LEVEL
          value: {{ .Values.config.logging.level | quote }}
        - name: LOG_FORMAT
          value: {{ .Values.config.logging.format | quote }}
        - name: ENVIRONMENT
          value: {{ .Values.global.environment | quote }}
        - name: ENABLE_METRICS
          value: {{ .Values.config.monitoring.enabled | quote }}
        - name: WORKDIR
          value: "/data"
        - name: HF_HOME
          value: "/cache/hf"
        - name: HF_HUB_CACHE
          value: "/cache/hf/hub"
        - name: TRANSFORMERS_CACHE
          value: "/cache/hf/transformers"
        - name: CLEANUP_AFTER_PROCESS
          value: {{ .Values.config.cleanup.afterProcess | quote }}
        - name: CLEANUP_DELETE_RAW
          value: {{ .Values.config.cleanup.deleteRaw | quote }}
        - name: CLEANUP_DELETE_WAV
          value: {{ .Values.config.cleanup.deleteWav | quote }}
        - name: HSA_ENABLE_SDMA
          value: "0"
        - name: PYTHONWARNINGS
          value: "ignore::FutureWarning"
        resources:
          requests:
            cpu: {{ .Values.worker.resources.requests.cpu }}
            memory: {{ .Values.worker.resources.requests.memory }}
            {{- if .Values.worker.gpu.enabled }}
            {{- if eq .Values.worker.gpu.type "nvidia" }}
            nvidia.com/gpu: {{ index .Values.worker.resources.requests "nvidia.com/gpu" | default 1 }}
            {{- else if eq .Values.worker.gpu.type "amd" }}
            amd.com/gpu: {{ index .Values.worker.resources.requests "amd.com/gpu" | default 1 }}
            {{- end }}
            {{- end }}
          limits:
            cpu: {{ .Values.worker.resources.limits.cpu }}
            memory: {{ .Values.worker.resources.limits.memory }}
            {{- if .Values.worker.gpu.enabled }}
            {{- if eq .Values.worker.gpu.type "nvidia" }}
            nvidia.com/gpu: {{ index .Values.worker.resources.limits "nvidia.com/gpu" | default 1 }}
            {{- else if eq .Values.worker.gpu.type "amd" }}
            amd.com/gpu: {{ index .Values.worker.resources.limits "amd.com/gpu" | default 1 }}
            {{- end }}
            {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data
        - name: cache
          mountPath: /cache
        {{- if .Values.worker.gpu.enabled }}
        - name: dev-kfd
          mountPath: /dev/kfd
        - name: dev-dri
          mountPath: /dev/dri
        {{- end }}
        securityContext:
          {{- include "transcript-create.securityContext" . | nindent 10 }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "transcript-create.fullname" . }}-data
      - name: cache
        persistentVolumeClaim:
          claimName: {{ include "transcript-create.fullname" . }}-cache
      {{- if .Values.worker.gpu.enabled }}
      - name: dev-kfd
        hostPath:
          path: /dev/kfd
          type: CharDevice
      - name: dev-dri
        hostPath:
          path: /dev/dri
          type: Directory
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
