{{- if .Values.migrations.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "transcript-create.fullname" . }}-migrations-{{ .Release.Revision }}
  labels:
    {{- include "transcript-create.labels" . | nindent 4 }}
    app.kubernetes.io/component: migrations
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "transcript-create.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migrations
    spec:
      restartPolicy: Never
      {{- include "transcript-create.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- include "transcript-create.podSecurityContext" . | nindent 8 }}
      containers:
      - name: migrations
        image: "{{ .Values.migrations.image.repository }}:{{ .Values.migrations.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["python3", "scripts/run_migrations.py", "upgrade"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.existingSecret | default (printf "%s-secrets" (include "transcript-create.fullname" .)) }}
              key: database-url
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          {{- toYaml .Values.migrations.resources | nindent 10 }}
        securityContext:
          {{- include "transcript-create.securityContext" . | nindent 10 }}
          readOnlyRootFilesystem: true
{{- end }}
