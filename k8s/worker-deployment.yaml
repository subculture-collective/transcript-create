apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcript-worker
  labels:
    app: transcript-create
    component: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: transcript-create
      component: worker
  template:
    metadata:
      labels:
        app: transcript-create
        component: worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        # GPU access requires supplemental groups
        supplementalGroups: [44, 104, 107]  # video, render groups
        seccompProfile:
          type: RuntimeDefault
      # GPU node selector
      nodeSelector:
        workload-type: gpu
      # Tolerate GPU node taints
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - key: amd.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: worker
        image: transcript-create:latest
        imagePullPolicy: IfNotPresent
        command: ["python3", "-m", "worker.loop"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: transcript-secrets
              key: database-url
        - name: OPENSEARCH_URL
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: opensearch-url
        - name: WHISPER_MODEL
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: whisper-model
        - name: WHISPER_BACKEND
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: whisper-backend-worker
        - name: FORCE_GPU
          value: "true"
        - name: GPU_DEVICE_PREFERENCE
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: gpu-device-preference
        - name: GPU_COMPUTE_TYPES
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: gpu-compute-types
        - name: CHUNK_SECONDS
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: chunk-seconds
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: transcript-secrets
              key: hf-token
              optional: true
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: log-level
        - name: LOG_FORMAT
          value: "json"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: environment
        - name: ENABLE_METRICS
          value: "true"
        - name: WORKDIR
          value: "/data"
        - name: HF_HOME
          value: "/cache/hf"
        - name: HF_HUB_CACHE
          value: "/cache/hf/hub"
        - name: TRANSFORMERS_CACHE
          value: "/cache/hf/transformers"
        - name: CLEANUP_AFTER_PROCESS
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: cleanup-after-process
        - name: CLEANUP_DELETE_RAW
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: cleanup-delete-raw
        - name: CLEANUP_DELETE_WAV
          valueFrom:
            configMapKeyRef:
              name: transcript-config
              key: cleanup-delete-wav
        # ROCm specific environment variables
        - name: HSA_ENABLE_SDMA
          value: "0"
        - name: PYTHONWARNINGS
          value: "ignore::FutureWarning"
        resources:
          requests:
            cpu: 2000m
            memory: 8Gi
            # For AMD ROCm
            amd.com/gpu: 1
          limits:
            cpu: 4000m
            memory: 16Gi
            amd.com/gpu: 1
          # For NVIDIA, uncomment instead:
          # requests:
          #   cpu: 2000m
          #   memory: 8Gi
          #   nvidia.com/gpu: 1
          # limits:
          #   cpu: 4000m
          #   memory: 16Gi
          #   nvidia.com/gpu: 1
        volumeMounts:
        - name: data
          mountPath: /data
        - name: cache
          mountPath: /cache
        # GPU device access
        - name: dev-kfd
          mountPath: /dev/kfd
        - name: dev-dri
          mountPath: /dev/dri
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: transcript-data
      - name: cache
        persistentVolumeClaim:
          claimName: transcript-cache
      # GPU device volumes (for AMD ROCm)
      - name: dev-kfd
        hostPath:
          path: /dev/kfd
          type: CharDevice
      - name: dev-dri
        hostPath:
          path: /dev/dri
          type: Directory
